/*** 14500. 테트로미노 ***/

#include<iostream>
#include<vector>
using namespace std;

// 모든 경우의 테트로미노의 델타
int tetromino[19][4][2] = { { {0, 0}, {0, 1}, {0, 2}, {0, 3} },
							{ {0, 0} , {1, 0}, {2, 0}, {3, 0} },
							{ {0, 0}, {0, 1}, {1, 0}, {1, 1} },
							{ {0, 0}, {0, 1}, {1, 0}, {2, 0} },
							{ {0, 0}, {1, 0}, {2, 0}, {2, 1} },
							{ {0, 0}, {0, 1}, {1, 1}, {2, 1} },
							{ {0, 1}, {1, 1}, {2, 1}, {2, 0} },
							{ {0, 0}, {1, 0}, {0, 1}, {0, 2} },
							{ {0, 0}, {0, 1}, {0, 2}, {1, 2} },
							{ {0, 0}, {1, 0}, {1, 1}, {1, 2} },
							{ {1, 0}, {1, 1}, {1, 2}, {0, 2} },
							{ {0, 0}, {1, 0}, {1, 1}, {2, 1} },
							{ {0, 1}, {1, 1}, {1, 0}, {2, 0} },
							{ {1, 0}, {1, 1}, {0, 1}, {0, 2} },
							{ {0, 0}, {0, 1}, {1, 1}, {1, 2} },
							{ {0, 0}, {0, 1}, {0, 2}, {1, 1} },
							{ {1, 0}, {1, 1}, {0, 1}, {1, 2} },
							{ {0, 0}, {1, 0}, {1, 1}, {2, 0} },
							{ {0, 1}, {1, 1}, {1, 0}, {2, 1} } };

int main() {

	int N, M;
	cin >> N >> M;
	vector < vector<int>> arr(N, vector<int>(M));
	int max = 0;

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			cin >> arr[i][j];
		}
	}

	for (int i = 0; i < N; i++) {	// 시작지점
		for (int j = 0; j < M; j++) {

			for (int k = 0; k < 19; k++) {	// 테트로미노 놓기
				int s = 0;
				for (int m = 0; m < 4; m++) {	// 4칸의 델타 값 
					int ni = i + tetromino[k][m][0];
					int nj = j + tetromino[k][m][1];
					if (ni >= 0 && ni < N && nj >= 0 && nj < M) {	// 이동한 좌표가 배열 범위 안에 들면 합산
						s += arr[ni][nj];
					}
				}
				if (max < s) {	// 최대값보다 현재 합이 더 크면 갱신
					max = s;
				}
			}
		}
	}

	cout << max;

	return 0;
}