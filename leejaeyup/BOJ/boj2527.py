'''
2527 직사각형
2차원 격자공간에 두 개의 꼭짓점 좌표로 표현되는 직사각형이 있다. 직사각형은 아래와 같이 왼쪽 아래 꼭짓점 좌표 (x, y)와 오른쪽 위 꼭짓점 좌표 (p, q)로 주어진다.



이 문제에서 모든 직사각형은 두 꼭짓점의 좌표를 나타내는 4개의 정수 x y p q 로 표현된다. 단 항상 x<p, y<q 이다. 예를 들어 위 그림에 제시된 직사각형이라면 아래와 같이 표현된다.

3 2 9 8

두 개의 직사각형은 그 겹치는 부분의 특성에 따라 다음 4가지 경우로 분류될 수 있다. 

먼저 두 직사각형의 겹치는 부분이 직사각형인 경우이다. 아래 그림(a)는 공통부분이 직사각형인 경우의 3가지 예를 보여준다,



그림 (a)

또는 겹치는 부분이 아래 그림 (b)와 같이 선분이 될 수도 있고, 그림 (c)와 같이 점도 될 수 있다. 



그림 (b)



그림 (c) 

마지막으로 아래 그림 (d)와 같이 공통부분 없이 두 직사각형이 완전히 분리된 경우도 있다.



그림 (d)

여러분은 두 직사각형의 겹치는 부분이 직사각형인지, 선분인지, 점인지, 아니면 전혀 없는 지를 판별해서 해당되는 코드 문자를 출력해야 한다. 

공통부분의 특성	코드 문자
직사각형	a
선분	b
점	c
공통부분이 없음	d
입력
4개의 줄로 이루어져 있다. 각 줄에는 8개의 정수가 하나의 공백을 두고 나타나는데, 첫 4개의 정수는 첫 번째 직사각형을, 나머지 4개의 정수는 두 번째 직사각형을 각각 나타낸다. 단 입력 직사각형의 좌표 값은 1이상 50,000 이하의 정수로 제한된다. 

출력
4개의 각 줄에 주어진 두 직사각형의 공통부분을 조사해서 해당하는 코드 문자를 출력파일의 첫 4개의 줄에 각각 차례대로 출력해야 한다.
'''



answers = []    # 여기에 정답을 표시해보자.

for _ in range(4):
    line = input().strip()
    parts = line.split()
    x1 = int(parts[0]); y1 = int(parts[1]); p1 = int(parts[2]); q1 = int(parts[3])
    x2 = int(parts[4]); y2 = int(parts[5]); p2 = int(parts[6]); q2 = int(parts[7])
    #이 문제에서 한 테스트 케이스에서 무조건 직사각형이 2개만 주어지기 때문에 그냥 이런 식으로 입력 받아봤다...

    # 겹치는 구간 길이 비슷하게 계산.
    right_min = p1 if p1 < p2 else p2
    left_max  = x1 if x1 > x2 else x2
    dx = right_min - left_max

    top_min = q1 if q1 < q2 else q2
    bottom_max = y1 if y1 > y2 else y2
    dy = top_min - bottom_max

    # 이 문제 조건에서 d(아예 안 겹침), c(점), b(선분), a(직사각형).
    # dx, dy 둘 중 하나라도 음수면 안 겹치는 걸로.
    if dx < 0 or dy < 0:
        answers.append('d')
    else:
        # 0,0이면 점이다. 0,양수 or 양수,0이면 선분이다. 둘 다 양수면 직사각형.
        if dx == 0 and dy == 0:
            answers.append('c')
        elif (dx == 0 and dy > 0) or (dx > 0 and dy == 0):
            answers.append('b')
        else:
            answers.append('a')



for ch in answers:
    print(ch)