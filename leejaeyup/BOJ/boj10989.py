### 문제
# N개의 수가 주어졌을 때, 이를 오름차순으로 정렬하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 수의 개수 N(1 ≤ N ≤ 10,000,000)이 주어진다.
# 둘째 줄부터 N개의 줄에는 수가 주어진다.
# 이 수는 10,000보다 작거나 같은 자연수이다.

# 출력
# 첫째 줄부터 N개의 줄에 오름차순으로 정렬한 결과를 한 줄에 하나씩 출력한다.
###

    # N = int(input())    # 첫째 줄에 주어진 수의 개수 N을 받아들이자.
    # arr = []    # 비어 있는 배열을 선언한 뒤,
    # for test_case in range(1, N+1):
    #     arr.append(int(input()))    # 둘째 줄부터 주어지는 수를 전부 arr에 append하자.

    # arr.sort()  # 그 뒤 그 배열을 정렬하자.



    # for i in arr:
    #     print(i)    # 이 문제는 한 줄에 숫자 하나씩만 출력하는 걸 원하기 때문에 이렇게 출력하자.



        ### 위 코드처럼 썼다가 틀렸음...
        ### [이 문제(BOJ “수 정렬하기 3” 유형)는 입력 개수 N이 매우 크고(최대 1천만),
        ### arr에 모든 수를 저장하고 sort()(O(N log N))를 돌리면, N이 크면 메모리·시간이 터집니다.
        ### 파이썬 input()/print()를 반복해서 쓰는 것도 매우 느립니다.
        ### 값의 범위가 작으므로 카운팅 정렬을 쓰세요] 라고 함... 다르게 풀어보자.



N = int(input())
count = [0] * 10001  # 0~10000까지의 정보 (문제 조건)을 저장해둘 수 있음.

for _ in range(N):
    num = int(input())
    count[num] += 1

for v in range(1, 10001):       # 카운팅 배열을 순회하면서
    if count[v] > 0:
        for _ in range(count[v]):
            print(v)            #  값 출력
